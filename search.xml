<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vue网页版集成百度地图定位</title>
      <link href="/2022/02/23/start-bmap/"/>
      <url>/2022/02/23/start-bmap/</url>
      
        <content type="html"><![CDATA[<h2 id="申请百度地图KEY"><a href="#申请百度地图KEY" class="headerlink" title="申请百度地图KEY"></a>申请百度地图KEY</h2><p><a href="https://lbsyun.baidu.com/">https://lbsyun.baidu.com/</a></p><p>可以给每个系统单独申请一个KEY. 我申请了3个端的key，如下：</p><p><img src="https://s2.loli.net/2022/02/23/zMBepX4iS836vUH.png" alt="image-20220223165519325"></p><h2 id="在vue中集成百度地图"><a href="#在vue中集成百度地图" class="headerlink" title="在vue中集成百度地图"></a>在vue中集成百度地图</h2><p>我使用的是”vue”: “2.6.14”，在package中引入百度地图GL版本的VUE封装<a href="https://vue-bmap-gl.guyixi.cn/">https://vue-bmap-gl.guyixi.cn/</a></p><p>“vue-bmap-gl”: “0.0.30”</p><h2 id="Vue项目中进行集成"><a href="#Vue项目中进行集成" class="headerlink" title="Vue项目中进行集成"></a>Vue项目中进行集成</h2><p>在main.js中配置百度分配的key,全局引用组件。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> VueBMapGL <span class="token keyword">from</span> <span class="token string">'vue-bmap-gl'</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token string">'vue-bmap-gl/dist/style.css'</span><span class="token punctuation">;</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VueBMapGL<span class="token punctuation">)</span><span class="token punctuation">;</span>VueBMapGL<span class="token punctuation">.</span><span class="token function">initBMapApiLoader</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    ak<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">BMAP_KEY</span><span class="token punctuation">,</span>    <span class="token comment">// 默认百度 sdk 版本为 1.0</span>    v<span class="token operator">:</span> <span class="token string">'1.0'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Vue开发相关页面"><a href="#Vue开发相关页面" class="headerlink" title="Vue开发相关页面"></a>Vue开发相关页面</h2><p>主要功能：1、实现根据浏览器自动定位到当地；2、实现按关键字下拉搜索定位；3、实现坐标转换；4、地点拖拽定位并显示坐标。</p><p>目前国内主要有以下三种坐标系：</p><p>WGS84：为一种大地坐标系，也是目前广泛使用的GPS全球卫星定位系统使用的坐标系。</p><p>GCJ02：又称火星坐标系，是由中国国家测绘局制订的地理信息系统的坐标系统。由WGS84坐标系经加密后的坐标系。</p><p>BD09：为百度坐标系，在GCJ02坐标系基础上再次加密。其中bd09ll表示百度经纬度坐标，bd09mc表示百度墨卡托米制坐标。</p><p>因web端使用的是百度坐标系BD09，手机端使用的是GCJ02。所以前端保存数据需要转换成GCJ02，以方便使用。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"myMapContainer"</span><span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>bmap <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"bmap-box"</span> ref<span class="token operator">=</span><span class="token string">"refMap"</span> vid<span class="token operator">=</span><span class="token string">"bmapGL-vue"</span> <span class="token operator">:</span>center<span class="token operator">=</span><span class="token string">"initMapCenter"</span> <span class="token operator">:</span>zoom<span class="token operator">=</span><span class="token string">"map.zoom"</span> <span class="token operator">:</span>events<span class="token operator">=</span><span class="token string">"map.events"</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>el<span class="token operator">-</span>bmap<span class="token operator">-</span>marker                vid<span class="token operator">=</span><span class="token string">"component-marker"</span>                v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"marker.position"</span>                <span class="token operator">:</span>position<span class="token operator">=</span><span class="token string">"marker.position"</span>                <span class="token operator">:</span>events<span class="token operator">=</span><span class="token string">"marker.events"</span>                <span class="token operator">:</span>enableDragging<span class="token operator">=</span><span class="token string">"marker.enableDragging"</span>            <span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>bmap<span class="token operator">-</span>marker<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>bmap<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>card            <span class="token operator">:</span>body<span class="token operator">-</span>style<span class="token operator">=</span>"<span class="token punctuation">{</span>                <span class="token string">'max-height'</span><span class="token operator">:</span> <span class="token string">'450px'</span><span class="token punctuation">,</span>                <span class="token string">'overflow-y'</span><span class="token operator">:</span> <span class="token string">'scroll'</span><span class="token punctuation">,</span>                padding<span class="token operator">:</span> <span class="token string">'0 0'</span>            <span class="token punctuation">}</span>"            <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"result-panel"</span>            v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"canEdit"</span>        <span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>template slot<span class="token operator">=</span><span class="token string">"header"</span><span class="token operator">&gt;</span>                <span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span>el<span class="token operator">-</span>autocomplete                        popper<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"autoAddressClass"</span>                        v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"address"</span>                        <span class="token operator">:</span>fetch<span class="token operator">-</span>suggestions<span class="token operator">=</span><span class="token string">"querySearchAsync"</span>                        <span class="token operator">:</span>trigger<span class="token operator">-</span>on<span class="token operator">-</span>focus<span class="token operator">=</span><span class="token string">"false"</span>                        placeholder<span class="token operator">=</span><span class="token string">"请输入位置"</span>                        <span class="token operator">:</span>debounce<span class="token operator">=</span><span class="token string">"500"</span>                        size<span class="token operator">=</span><span class="token string">"small"</span>                        @select<span class="token operator">=</span><span class="token string">"handleSelect"</span>                        clearable                    <span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span>template slot<span class="token operator">-</span>scope<span class="token operator">=</span><span class="token string">"{ item }"</span><span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"list-container"</span><span class="token operator">&gt;</span>                                <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"title"</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> item<span class="token punctuation">.</span>title <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>                                <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"address ellipsis"</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> item<span class="token punctuation">.</span>address <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>                            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>autocomplete<span class="token operator">&gt;</span>                <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>card<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span>el<span class="token operator">-</span>card            v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"marker.position &amp;&amp; canEdit"</span>            <span class="token operator">:</span>body<span class="token operator">-</span>style<span class="token operator">=</span>"<span class="token punctuation">{</span>                padding<span class="token operator">:</span> <span class="token string">'0 0'</span>            <span class="token punctuation">}</span>"            <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"info"</span>        <span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span>坐标<span class="token operator">:</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>el<span class="token operator">-</span>input read<span class="token operator">-</span>only ref<span class="token operator">=</span><span class="token string">"refLnglat"</span> <span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">"positionText"</span> size<span class="token operator">=</span><span class="token string">"small"</span> style<span class="token operator">=</span><span class="token string">"width: 180px"</span> <span class="token operator">/</span><span class="token operator">&gt;</span>            <span class="token operator">&lt;</span>el<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">"handleUpdatePosition"</span> size<span class="token operator">=</span><span class="token string">"small"</span> type<span class="token operator">=</span><span class="token string">"primary"</span><span class="token operator">&gt;</span>保存<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">&gt;</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>card<span class="token operator">&gt;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>    props<span class="token operator">:</span> <span class="token punctuation">{</span>        positionInfo<span class="token operator">:</span> <span class="token punctuation">{</span>            required<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            type<span class="token operator">:</span> String        <span class="token punctuation">}</span><span class="token punctuation">,</span>        canEdit<span class="token operator">:</span> <span class="token punctuation">{</span>            required<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            type<span class="token operator">:</span> Boolean<span class="token punctuation">,</span>            <span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">true</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token punctuation">{</span>            map<span class="token operator">:</span> <span class="token punctuation">{</span>                zoom<span class="token operator">:</span> <span class="token number">17</span><span class="token punctuation">,</span>                events<span class="token operator">:</span> <span class="token punctuation">{</span>                    <span class="token function-variable function">dblclick</span><span class="token operator">:</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'---event---: click'</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>marker<span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token punctuation">[</span>e<span class="token punctuation">.</span>latlng<span class="token punctuation">.</span>lng<span class="token punctuation">,</span> e<span class="token punctuation">.</span>latlng<span class="token punctuation">.</span>lat<span class="token punctuation">]</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            marker<span class="token operator">:</span> <span class="token punctuation">{</span>                position<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                visible<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>                label<span class="token operator">:</span> <span class="token punctuation">{</span>                    content<span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>                    style<span class="token operator">:</span> <span class="token punctuation">{</span>                        color<span class="token operator">:</span> <span class="token string">'#dcdcdc'</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                events<span class="token operator">:</span> <span class="token punctuation">{</span>                    <span class="token function-variable function">dragend</span><span class="token operator">:</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'---event---: dragend'</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>marker<span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token punctuation">[</span>e<span class="token punctuation">.</span>latLng<span class="token punctuation">.</span>lng<span class="token punctuation">,</span> e<span class="token punctuation">.</span>latLng<span class="token punctuation">.</span>lat<span class="token punctuation">]</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                enableDragging<span class="token operator">:</span> <span class="token boolean">true</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            address<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>            results<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// 搜索结果</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'created'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>positionInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>positionInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'初始化位置'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>positionInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>marker<span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>positionInfo<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// eslint-disable-next-line no-undef</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">coordinateConvertor</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>marker<span class="token punctuation">.</span>position<span class="token punctuation">,</span> <span class="token constant">COORDINATES_GCJ02</span><span class="token punctuation">,</span> <span class="token constant">COORDINATES_BD09</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>toBD09TranslateCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'自动定位到浏览器所在位置'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">geolocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    computed<span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token function">initMapCenter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$_<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>marker<span class="token punctuation">.</span>position<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'初始化当前地图中心-默认成都'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token number">104.07274727000174</span><span class="token punctuation">,</span> <span class="token number">30.57899361531913</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 默认成都</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'初始化当前地图中心'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>marker<span class="token punctuation">.</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>marker<span class="token punctuation">.</span>position<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token function">positionText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>marker<span class="token punctuation">.</span>position<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">''</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>marker<span class="token punctuation">.</span>position<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>marker<span class="token punctuation">.</span>position<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    methods<span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token function">getMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>refMap<span class="token punctuation">.</span><span class="token function">$$getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>refMap<span class="token punctuation">.</span><span class="token function">$$getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token function">handleUpdatePosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'handleUpdatePosition.....'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>refLnglat<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// eslint-disable-next-line no-undef</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">coordinateConvertor</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>marker<span class="token punctuation">.</span>position<span class="token punctuation">,</span> <span class="token constant">COORDINATES_BD09</span><span class="token punctuation">,</span> <span class="token constant">COORDINATES_GCJ02</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>toGCJ02TranslateCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token comment">/**         * 浏览器定位函数         * enableHighAccuracy：是否要求浏览器获取最佳效果，默认为false         */</span>        <span class="token function">geolocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">const</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>            <span class="token keyword">const</span> geolocation <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMapGL<span class="token punctuation">.</span>Geolocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            geolocation<span class="token punctuation">.</span><span class="token function">getCurrentPosition</span><span class="token punctuation">(</span>                <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment">// eslint-disable-next-line no-undef</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token constant">BMAP_STATUS_SUCCESS</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        that<span class="token punctuation">.</span><span class="token function">getAddrByPoint</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>point<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 当成功时，调用逆地址解析函数</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'浏览器定位失败：'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 失败时，弹出失败状态码</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token punctuation">{</span> enableHighAccuracy<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token comment">/**         * 逆地址解析函数（根据坐标点获取详细地址）         * @param {Object} point 百度地图坐标点，必传         */</span>        <span class="token function">getAddrByPoint</span><span class="token punctuation">(</span><span class="token parameter">point</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'local point'</span><span class="token punctuation">,</span> point<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">const</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>            <span class="token keyword">const</span> geco <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMapGL<span class="token punctuation">.</span>Geocoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            geco<span class="token punctuation">.</span><span class="token function">getLocation</span><span class="token punctuation">(</span>point<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 内容见下图</span>                <span class="token keyword">const</span> position <span class="token operator">=</span> <span class="token punctuation">[</span>res<span class="token punctuation">.</span>point<span class="token punctuation">.</span>lng<span class="token punctuation">,</span> res<span class="token punctuation">.</span>point<span class="token punctuation">.</span>lat<span class="token punctuation">]</span><span class="token punctuation">;</span>                that<span class="token punctuation">.</span>marker<span class="token punctuation">.</span>position <span class="token operator">=</span> position<span class="token punctuation">;</span> <span class="token comment">// 重新设置标注的地理坐标</span>                <span class="token comment">// that.marker.label.content = res.address; // 记录该点的详细地址信息</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token function">querySearchAsync</span><span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> cb</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'querySearchAsync:'</span><span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>                <span class="token function-variable function">onSearchComplete</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment">// 检索完成后的回调函数</span>                    <span class="token keyword">const</span> s <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                    <span class="token comment">// eslint-disable-next-line no-undef</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>local<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token constant">BMAP_STATUS_SUCCESS</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> res<span class="token punctuation">.</span><span class="token function">getCurrentNumPois</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                            s<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span><span class="token function">getPoi</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                        <span class="token function">cb</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取到数据时，通过回调函数cb返回到&lt;el-autocomplete&gt;组件中进行显示</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                        <span class="token function">cb</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>            <span class="token keyword">const</span> local <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMapGL<span class="token punctuation">.</span>LocalSearch</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 创建LocalSearch构造函数</span>            local<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 调用search方法，根据检索词str发起检索</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token function">handleSelect</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'handleSelect'</span><span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>address <span class="token operator">=</span> item<span class="token punctuation">.</span>address <span class="token operator">+</span> item<span class="token punctuation">.</span>title<span class="token punctuation">;</span> <span class="token comment">// 记录详细地址，含建筑物名</span>            <span class="token keyword">const</span> point <span class="token operator">=</span> <span class="token punctuation">[</span>item<span class="token punctuation">.</span>point<span class="token punctuation">.</span>lng<span class="token punctuation">,</span> item<span class="token punctuation">.</span>point<span class="token punctuation">.</span>lat<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>marker<span class="token punctuation">.</span>position <span class="token operator">=</span> point<span class="token punctuation">;</span> <span class="token comment">// 重新设置标注的地理坐标</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token comment">/**         * 坐标常量说明：         * COORDINATES_WGS84 = 1, WGS84坐标         * COORDINATES_WGS84_MC = 2, WGS84的平面墨卡托坐标         * COORDINATES_GCJ02 = 3，GCJ02坐标         * COORDINATES_GCJ02_MC = 4, GCJ02的平面墨卡托坐标         * COORDINATES_BD09 = 5, 百度bd09经纬度坐标         * COORDINATES_BD09_MC = 6，百度bd09墨卡托坐标         * COORDINATES_MAPBAR = 7，mapbar地图坐标         * COORDINATES_51 = 8，51地图坐标         */</span>        <span class="token function">coordinateConvertor</span><span class="token punctuation">(</span><span class="token parameter">point<span class="token punctuation">,</span> fromCoordinate<span class="token punctuation">,</span> toCoordinate<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">坐标转换,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>point<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">按坐标系</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>fromCoordinate<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">转换成</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>toCoordinate<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>                <span class="token keyword">const</span> convertor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BMapGL<span class="token punctuation">.</span>Convertor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">const</span> pointArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                pointArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BMapGL<span class="token punctuation">.</span>Point</span><span class="token punctuation">(</span>point<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> point<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                convertor<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span>pointArr<span class="token punctuation">,</span> fromCoordinate<span class="token punctuation">,</span> toCoordinate<span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token function">toBD09TranslateCallback</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'坐标转换成百度之后的回调函数'</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// eslint-disable-next-line no-undef</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">BMAP_STATUS_SUCCESS</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">const</span> afterPoint <span class="token operator">=</span> data<span class="token punctuation">.</span>points<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'转换后的BD09坐标：'</span><span class="token punctuation">,</span> afterPoint<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>marker<span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token punctuation">[</span>afterPoint<span class="token punctuation">.</span>lng<span class="token punctuation">,</span> afterPoint<span class="token punctuation">.</span>lat<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token function">toGCJ02TranslateCallback</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'坐标转换成高德之后的回调函数'</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// eslint-disable-next-line no-undef</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">BMAP_STATUS_SUCCESS</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">const</span> afterPoint <span class="token operator">=</span> data<span class="token punctuation">.</span>points<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">const</span> <span class="token constant">GCJ02</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>afterPoint<span class="token punctuation">.</span>lng<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>afterPoint<span class="token punctuation">.</span>lat<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'转换后的GCJ02坐标：'</span><span class="token punctuation">,</span> <span class="token constant">GCJ02</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">'setPosition'</span><span class="token punctuation">,</span> <span class="token constant">GCJ02</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span class="token operator">&lt;</span>style rel<span class="token operator">=</span><span class="token string">"stylesheet/scss"</span> lang<span class="token operator">=</span><span class="token string">"scss"</span><span class="token operator">&gt;</span>#myMapContainer <span class="token punctuation">{</span>    <span class="token punctuation">.</span>el<span class="token operator">-</span>autocomplete <span class="token punctuation">{</span>        <span class="token punctuation">.</span>el<span class="token operator">-</span>input <span class="token punctuation">{</span>            position<span class="token operator">:</span> relative<span class="token punctuation">;</span>            font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">14</span>px<span class="token punctuation">;</span>            display<span class="token operator">:</span> inline<span class="token operator">-</span>block<span class="token punctuation">;</span>            width<span class="token operator">:</span> <span class="token number">380</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">&gt;</span><span class="token operator">&lt;</span>style rel<span class="token operator">=</span><span class="token string">"stylesheet/scss"</span> lang<span class="token operator">=</span><span class="token string">"scss"</span> scoped<span class="token operator">&gt;</span>#myMapContainer <span class="token punctuation">{</span>    width<span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span>    height<span class="token operator">:</span> <span class="token number">600</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">.</span>result<span class="token operator">-</span>panel <span class="token punctuation">{</span>    position<span class="token operator">:</span> absolute<span class="token punctuation">;</span>    left<span class="token operator">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>    top<span class="token operator">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>    display<span class="token operator">:</span> flex<span class="token punctuation">;</span>    flex<span class="token operator">-</span>direction<span class="token operator">:</span> column<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">.</span>autoAddressClass <span class="token punctuation">{</span>    <span class="token punctuation">.</span>list<span class="token operator">-</span>container <span class="token punctuation">{</span>        overflow<span class="token operator">:</span> hidden<span class="token punctuation">;</span>        border<span class="token operator">-</span>bottom<span class="token operator">:</span> <span class="token number">1</span>px $color_line_split solid<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    li <span class="token punctuation">{</span>        i<span class="token punctuation">.</span>el<span class="token operator">-</span>icon<span class="token operator">-</span>search <span class="token punctuation">{</span>            margin<span class="token operator">-</span>top<span class="token operator">:</span> <span class="token number">11</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token punctuation">.</span>mgr10 <span class="token punctuation">{</span>            margin<span class="token operator">-</span>right<span class="token operator">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token punctuation">.</span>title <span class="token punctuation">{</span>            text<span class="token operator">-</span>overflow<span class="token operator">:</span> ellipsis<span class="token punctuation">;</span>            overflow<span class="token operator">:</span> hidden<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token punctuation">.</span>address <span class="token punctuation">{</span>            line<span class="token operator">-</span>height<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span>            font<span class="token operator">-</span>size<span class="token operator">:</span> <span class="token number">12</span>px<span class="token punctuation">;</span>            color<span class="token operator">:</span> $color_back<span class="token punctuation">;</span>            margin<span class="token operator">-</span>bottom<span class="token operator">:</span> <span class="token number">5</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">.</span>info <span class="token punctuation">{</span>    position<span class="token operator">:</span> absolute<span class="token punctuation">;</span>    right<span class="token operator">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>    top<span class="token operator">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>    padding<span class="token operator">:</span> <span class="token number">18</span>px <span class="token number">20</span>px<span class="token punctuation">;</span>    background<span class="token operator">-</span>color<span class="token operator">:</span> #fff<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h2><p>自动定位到当地</p><p><img src="https://s2.loli.net/2022/02/23/RVdhvzPM7nf9ep2.png" alt="image-20220223173008312"></p><p>搜索效果</p><p><img src="https://s2.loli.net/2022/02/23/4JFeporR3Ogst1h.png" alt="image-20220223173145456"></p><p>到这里，整个流程都通了，你也可以试试哦！有问题大家可以给我留言，一起交流学习吧！</p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> element-ui </tag>
            
            <tag> vue-bmap-gl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue网页版集成高德地图定位</title>
      <link href="/2022/01/12/start-amap/"/>
      <url>/2022/01/12/start-amap/</url>
      
        <content type="html"><![CDATA[<h2 id="申请高德开发key"><a href="#申请高德开发key" class="headerlink" title="申请高德开发key"></a>申请高德开发key</h2><p><a href="https://console.amap.com/dev/index">https://console.amap.com/dev/index</a></p><p>可以给每个系统单独申请一个KEY. 我申请了3个端的key，如下：</p><p><img src="https://s2.loli.net/2022/01/12/xF8MQ7idzDTOGAY.png" alt="image-20220112162850550"></p><h2 id="Vue中集成高德"><a href="#Vue中集成高德" class="headerlink" title="Vue中集成高德"></a>Vue中集成高德</h2><p>AMap-Vue 是一个基于 Vue.js 的高德地图 AMap JSAPI 封装。<a href="https://jimnox.gitee.io/amap-vue/">https://jimnox.gitee.io/amap-vue/</a></p><p>项目是V2.16版本，集成最新版本为”@amap/amap-vue”: “2.0.13”</p><blockquote><p>高德地图兼容性</p><p><code>AMapVue</code>建议搭配<code>vue &gt;= 2.6.11</code>, <code>AMap 2.0</code>版本使用</p><p>如果您在使用<code>AMap 1.4.*</code>，请搭配<code>AMapVue 1.4.*</code>使用</p></blockquote><h2 id="Vue项目中进行集成"><a href="#Vue项目中进行集成" class="headerlink" title="Vue项目中进行集成"></a>Vue项目中进行集成</h2><p>vue2+element-ui项目按需加载为例：</p><ul><li>第一步：首先在main.js中配置高德分配的key</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> AmapVueConfig <span class="token keyword">from</span> <span class="token string">'@amap/amap-vue/lib/config'</span><span class="token punctuation">;</span>AmapVueConfig<span class="token punctuation">.</span>key <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">AMAP_KEY</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li><p>第二步：在app.vue中设置安全秘钥</p><blockquote><p>如果是内网，浏览器设置的代理需要有高德的访问权限</p></blockquote></li></ul><p>高德自2021年12月02日升级，升级之后所申请的 key 必须配备安全密钥 <strong>jscode</strong> 一起使用。</p><p>​    AMAP_KEY: ‘“你申请的key”‘</p><p>   AMAP_JSCODE: ‘“你申请的key对应的jscode”‘,</p><p>​    AMAP_JSCODE_NGINX: ‘“<a href="https://xxx.com/_AMapService&quot;'">https://XXX.com/_AMapService"'</a></p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">/**     * 高德地图安全秘钥设置     */    mounted() {        if (process.env.NODE_ENV === 'local') {            window._AMapSecurityConfig = {                securityJsCode: process.env.AMAP_JSCODE // 开发环境采用，直接配置你的jscode            };        } else {            window._AMapSecurityConfig = {                serviceHost: process.env.AMAP_JSCODE_NGINX // 生产\测试环境采用：通过下面的反向代理            };        }    }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>第三步：在nginx中配置高德反向代理，开发阶段不用配置</p><blockquote><p>如果是内网访问，nginx需要开通访问外网的防火墙。</p></blockquote><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token comment"># 自定义地图服务代理</span><span class="token directive"><span class="token keyword">location</span> /_AMapService/v4/map/styles</span> <span class="token punctuation">{</span><span class="token directive"><span class="token keyword">set</span> <span class="token variable">$args</span> <span class="token string">"<span class="token variable">$args</span>&amp;jscode=你的jscode"</span></span><span class="token punctuation">;</span><span class="token directive"><span class="token keyword">proxy_pass</span> https://webapi.amap.com/v4/map/styles</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment"># Web服务API代理</span><span class="token directive"><span class="token keyword">location</span> /_AMapService/</span> <span class="token punctuation">{</span><span class="token directive"><span class="token keyword">set</span> <span class="token variable">$args</span> <span class="token string">"<span class="token variable">$args</span>&amp;jscode=你的jscode"</span></span><span class="token punctuation">;</span><span class="token directive"><span class="token keyword">proxy_pass</span> https://restapi.amap.com/</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="vue功能中使用高德地图"><a href="#vue功能中使用高德地图" class="headerlink" title="vue功能中使用高德地图"></a>vue功能中使用高德地图</h2><p>新建一个myMap.vue，内容如下</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;    &lt;div id="myMapContainer"&gt;        &lt;amap cache-key="coord-picker-map" :center="initPosition" mmap-style="amap://styles/whitesmoke" async :zoom="13" is-hotspot @click="onMapClick"&gt;            &lt;MapComponent ref="refMapComponent" :positionInfo="positionInfo" @updatePosition="handleUpdatePosition" /&gt;        &lt;/amap&gt;    &lt;/div&gt;&lt;/template&gt;&lt;script&gt;import Amap from '@amap/amap-vue/lib/amap';// import AmapMarker from '@amap/amap-vue/lib/marker'import MapComponent from './mapComponent.vue';export default {    components: { Amap, MapComponent },    props: {        positionInfo: {            required: false,            type: String        }    },    data() {        return {            center: null        };    },    created() {        console.log('created', this.positionInfo);    },    computed: {        initPosition() {            console.log('初始化当前地图中心', this.positionInfo);            if (this.positionInfo) {                console.log('初始化位置', this.positionInfo);                return this.positionInfo.split(',');            } else {                return null;            }        }    },    methods: {        onMapClick(e) {            console.log('onMapClick.....', e);            if (e.lnglat) {                this.$refs.refMapComponent.position = [e.lnglat.lng, e.lnglat.lat];            } else {                this.$refs.refMapComponent.position = null;            }        },        handleUpdatePosition(position) {            console.log('handleUpdatePosition.....', position);            this.$emit('setPosition', position);        }    }};&lt;/script&gt;&lt;style rel="stylesheet/scss" lang="scss" scoped&gt;#myMapContainer {    width: 100%;    height: 600px;}&lt;/style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>再新建一个mapComponent.vue,内容如下</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;    &lt;div class="my-custom-map-component"&gt;        &lt;amap-marker            v-if="position"            :position.sync="position"            :label="{                content: hover ? hover.name : '',                direction: 'top'            }"            draggable        /&gt;        &lt;el-card            :body-style="{                'max-height': '450px',                'overflow-y': 'scroll',                padding: '0 0'            }"            class="result-panel"        &gt;            &lt;template slot="header"&gt;                &lt;template v-if="mode === 'search'"&gt;                    &lt;el-autocomplete v-model="query" :fetch-suggestions="autoCompleteAsync" placeholder="请输入内容" :debounce="500" size="small" /&gt;                    &lt;el-button @click="search(true)" :disabled="!query" size="small" type="primary"&gt;搜索&lt;/el-button&gt;                &lt;/template&gt;                &lt;template v-if="mode === 'result'"&gt;                    &lt;div class="result-title"&gt;                        &lt;el-button icon="el-icon-arrow-left" @click="reset" size="small" style="margin-right: 6px" /&gt;                        &lt;span class="count"&gt;共 {{ searching ? '...' : total }} 条结果&lt;/span&gt;                    &lt;/div&gt;                &lt;/template&gt;            &lt;/template&gt;            &lt;div v-if="mode === 'result' &amp;&amp; total &gt; 0" size="small" class="result-list"&gt;                &lt;el-pagination                    small                    style="padding-top: 20px; padding-bottom: 20px"                    layout="prev, pager, next"                    :page-size="pageSize"                    :current-page.sync="pageIndex"                    :total="total"                /&gt;                &lt;div v-for="item in results" :key="item.id"&gt;                    &lt;div class="item-title" @click="focus(item)"&gt;{{ item.name }}&lt;/div&gt;                    &lt;div class="item-addr"&gt;{{ item.address }}&lt;/div&gt;                    &lt;el-divider&gt;&lt;/el-divider&gt;                &lt;/div&gt;                &lt;el-pagination                    small                    style="padding-bottom: 20px"                    layout="prev, pager, next"                    :page-size="pageSize"                    :current-page.sync="pageIndex"                    :total="total"                /&gt;            &lt;/div&gt;        &lt;/el-card&gt;        &lt;el-card            v-if="position"            :body-style="{                padding: '0 0'            }"            class="info"        &gt;            &lt;span&gt;坐标:&lt;/span&gt;            &lt;el-input read-only :value="positionText" size="small" style="width: 180px" /&gt;            &lt;el-button @click="surePosition" size="small" type="primary"&gt;保存&lt;/el-button&gt;        &lt;/el-card&gt;    &lt;/div&gt;&lt;/template&gt;&lt;script&gt;import { withAmap, loadPlugins } from '@amap/amap-vue';import AmapMarker from '@amap/amap-vue/lib/marker';export default {    name: 'MapComponent',    components: { AmapMarker },    mixins: [withAmap],    props: {        positionInfo: {            required: false,            type: String        }    },    data() {        return {            mode: 'search',            query: '',            searching: false,            tips: [],            results: [],            total: 0,            hover: null,            position: null,            pageIndex: 1,            pageSize: 20        };    },    watch: {        pageIndex(value) {            this.ps.setPageIndex(value);            this.search(false);        }    },    computed: {        positionText() {            if (!this.position) return '';            return `${this.position[0]},${this.position[1]}`;        }    },    async mounted() {        await loadPlugins(['AMap.AutoComplete', 'AMap.PlaceSearch']);        // eslint-disable-next-line no-undef        this.ps = new AMap.PlaceSearch({            pageSize: this.pageSize        });        // eslint-disable-next-line no-undef        this.ac = new AMap.AutoComplete();        if (this.positionInfo) {            console.log('初始化位置', this.positionInfo);            // eslint-disable-next-line no-undef            this.position = this.positionInfo.split(',');        }    },    methods: {        handleCurrentChange(val) {            console.log('handleCurrentChange', val);            this.pageIndex = val;        },        async search(clear = false) {            console.log('search', clear);            this.mode = 'result';            if (clear) {                this.results = [];                this.total = 0;                this.pageIndex = 1;                this.ps.setPageIndex(1);            }            this.searching = true;            const { query } = this;            this.ps.search(query, (status, result) =&gt; {                this.searching = false;                if (query !== this.query) return;                if (status === 'complete' &amp;&amp; result.poiList) {                    this.results = result.poiList.pois;                    this.total = result.poiList.count;                    this.fitView();                } else {                    this.results = [];                    this.total = 0;                }            });        },        autoCompleteAsync(kw, cb) {            console.log('1、autoCompleteAsync......', kw);            if (!kw) {                this.tips = [];                cb(this.tips);            } else {                this.ac.search(kw, (status, result) =&gt; {                    if (status === 'complete' &amp;&amp; result.tips) {                        console.log('2、autoCompleteAsync......', kw);                        const textArray = Array.from(new Set(result.tips.map(tip =&gt; tip.name)));                        this.tips = textArray.map(item =&gt; {                            return { value: item };                        });                        cb(this.tips);                    } else {                        this.tips = [];                        cb(this.tips);                    }                });            }        },        focus(poi) {            const pos = [poi.location.lng, poi.location.lat];            this.hover = poi;            this.$map.setCenter(pos);            this.position = [...pos];        },        fitView() {            requestAnimationFrame(() =&gt; {                this.$map.setFitView(null, false, [0, 0, 300, 0]);                this.focus(this.results[0]);            });        },        reset() {            this.ps.setPageIndex(1);            this.results = [];            this.tips = [];            this.total = 0;            this.mode = 'search';        },        surePosition() {            console.log(this.positionText);            console.log(this.position);            this.$emit('updatePosition', this.positionText);        }    }};&lt;/script&gt;&lt;style rel="stylesheet/scss" lang="scss" scoped&gt;.my-custom-map-component {    .result-panel {        position: absolute;        left: 10px;        top: 10px;        width: 300px;        display: flex;        flex-direction: column;        .result-list {            margin: 0 12px;        }        .result-list.ant-list-loading {            min-height: 100px;            display: flex;            justify-content: center;            align-items: center;        }        .result-title {            .count {                font-size: 14px;                color: #999;            }        }        .item-title {            cursor: pointer;            font-size: 16px;            font-weight: 600;        }        .item-addr {            font-size: 14px;            color: #999;            margin-top: 20px;        }    }    .info {        position: absolute;        right: 10px;        top: 10px;        padding: 18px 20px;        background-color: #fff;    }}&lt;/style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在使用该定位的页面增加如下代码：</p><p> import MyMap from ‘views/components/map-location/myMap.vue’;</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;div v-if="showMap"&gt;            &lt;el-dialog :append-to-body="true" title="定位设置" :visible.sync="showMap" :show-close="true" :close-on-click-modal="false" top="1vh" width="80%"&gt;                &lt;MyMap :positionInfo.sync="punchAddress" @setPosition="handleSetPosition" /&gt;            &lt;/el-dialog&gt;        &lt;/div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h2><p>通过关键字搜索，选择定位地址后会自动获取到坐标。</p><p><img src="https://s2.loli.net/2022/01/12/iXcYEs9eAmL3KJW.png" alt="image-20220112170011036"></p><p><img src="https://s2.loli.net/2022/01/12/VLFobtOlfs4WnHk.png" alt="image-20220112170140021"></p><p>到这里，整个流程都通了，你也可以试试哦！有问题大家可以给我留言，一起交流学习吧！</p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> vue </tag>
            
            <tag> element-ui </tag>
            
            <tag> AMapVue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web攻击技术有哪些</title>
      <link href="/2022/01/09/web-attack-method/"/>
      <url>/2022/01/09/web-attack-method/</url>
      
        <content type="html"><![CDATA[<h2 id="web攻击技术有哪些"><a href="#web攻击技术有哪些" class="headerlink" title="web攻击技术有哪些"></a>web攻击技术有哪些</h2><p><img src="https://s2.loli.net/2022/01/10/1hToBaDWMOldmS4.jpg" alt="web攻击技术水印"></p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> attack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac中使用shell命令发送邮件</title>
      <link href="/2022/01/08/hello-shell-mail/"/>
      <url>/2022/01/08/hello-shell-mail/</url>
      
        <content type="html"><![CDATA[<h2 id="mac中使用shell命令发送邮件"><a href="#mac中使用shell命令发送邮件" class="headerlink" title="mac中使用shell命令发送邮件"></a>mac中使用shell命令发送邮件</h2><p>首先查看mail命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mail -hmail: illegal option -- hUsage: mail <span class="token punctuation">[</span>-EiInv<span class="token punctuation">]</span> <span class="token punctuation">[</span>-s subject<span class="token punctuation">]</span> <span class="token punctuation">[</span>-c cc-addr<span class="token punctuation">]</span> <span class="token punctuation">[</span>-b bcc-addr<span class="token punctuation">]</span> <span class="token punctuation">[</span>-F<span class="token punctuation">]</span> to-addr <span class="token punctuation">..</span>.       mail <span class="token punctuation">[</span>-EHiInNv<span class="token punctuation">]</span> <span class="token punctuation">[</span>-F<span class="token punctuation">]</span> -f <span class="token punctuation">[</span>name<span class="token punctuation">]</span>       mail <span class="token punctuation">[</span>-EHiInNv<span class="token punctuation">]</span> <span class="token punctuation">[</span>-F<span class="token punctuation">]</span> <span class="token punctuation">[</span>-u user<span class="token punctuation">]</span>       mail -e <span class="token punctuation">[</span>-f name<span class="token punctuation">]</span>       mail -H<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="发送邮件1"><a href="#发送邮件1" class="headerlink" title="发送邮件1"></a>发送邮件1</h3><p>邮件内容和标题不支持中文</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">'hello email'</span> <span class="token operator">|</span> mail -s <span class="token string">'https://rainerpiao.github.io'</span> user@qq.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="发送邮件2"><a href="#发送邮件2" class="headerlink" title="发送邮件2"></a>发送邮件2</h3><p>读取文件中的内容进行发送，支持中文内容, 但标题不支持中文。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> test.txt <span class="token operator">|</span> mail -s <span class="token string">'https://rainerpiao.github.io'</span> user@qq.commail -s <span class="token string">"https://rainerpiao.github.io"</span> user@qq.com<span class="token operator">&lt;</span>test.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="发送邮件3"><a href="#发送邮件3" class="headerlink" title="发送邮件3"></a>发送邮件3</h3><p>同时发送给多个收件人, 空格隔开</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> test.txt <span class="token operator">|</span> mail -s <span class="token string">'https://rainerpiao.github.io'</span> user1@qq.com user2@qq.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="发送邮件4"><a href="#发送邮件4" class="headerlink" title="发送邮件4"></a>发送邮件4</h3><p>发送邮件同时抄送给其他人</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">'hello cc'</span> <span class="token operator">|</span> mail -s <span class="token string">'https://rainerpiao.github.io'</span> -c <span class="token string">"useq@126.com"</span> user@qq.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="发送邮件5"><a href="#发送邮件5" class="headerlink" title="发送邮件5"></a>发送邮件5</h3><p>同时抄送并密送给其他人, 同时抄送多个人用;分割，并加引号””包含</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">'hello cc bcc'</span> <span class="token operator">|</span> mail -s <span class="token string">'hello test'</span> -c <span class="token string">"user1@126.com"</span> -b <span class="token string">"user2@qq.com"</span> user3@126.com<span class="token builtin class-name">echo</span> <span class="token string">'hello cc bcc'</span> <span class="token operator">|</span> mail -s <span class="token string">'hello mail123'</span> -c <span class="token string">'use1@gmail.com;use2@126.com'</span> -b us3@qq.com us4@126.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> mail </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文档编辑工具Typora之图片自动上传插件PicGo</title>
      <link href="/2022/01/05/hello-typora-picgo/"/>
      <url>/2022/01/05/hello-typora-picgo/</url>
      
        <content type="html"><![CDATA[<h2 id="Typora中使用上传图片插件"><a href="#Typora中使用上传图片插件" class="headerlink" title="Typora中使用上传图片插件"></a>Typora中使用上传图片插件</h2><blockquote><p>我们使用Typora写Markdown文档很方便，但是引用图片时候只能使用url让人感觉很不方便，其实我们可以使用图床来存我们的图片素材，可以在编写文档通过插件自动上传到我们的图床中，相当方便。</p></blockquote><h3 id="安装PicGo插件"><a href="#安装PicGo插件" class="headerlink" title="安装PicGo插件"></a>安装PicGo插件</h3><blockquote><p><strong>一个用于快速上传图片并获取图片 URL 链接的工具，</strong>PicGo上传之后，会自动将上传成功的URL复制到你的剪贴板，支持5种复制格式。</p><p>PicGo <a href="https://picgo.github.io/PicGo-Doc/zh/guide/getting-started.html">https://picgo.github.io/PicGo-Doc/zh/guide/getting-started.html</a></p></blockquote><h3 id="注册SM-MS账号"><a href="#注册SM-MS账号" class="headerlink" title="注册SM. MS账号"></a>注册SM. MS账号</h3><blockquote><p>图床申请<a href="https://sm.ms/login">https://sm.ms/login</a>，可以免费使用5G空间，每张图不超过5M.</p></blockquote><h3 id="在PicGo中配置SM-MS"><a href="#在PicGo中配置SM-MS" class="headerlink" title="在PicGo中配置SM. MS"></a>在PicGo中配置SM. MS</h3><p>配置token</p><p><img src="https://s2.loli.net/2022/01/04/I4fphlAsiZJgTtF.png" alt="image-20220104181011869"></p><p>注册并登录<a href="https://sm.ms/home/apitoken">smms</a>后台获取token值。</p><p><img src="https://s2.loli.net/2022/01/04/FCOwoeWq5J6VzZK.png" alt="image-20220104180933526"></p><h3 id="PicGo插件安装"><a href="#PicGo插件安装" class="headerlink" title="PicGo插件安装"></a>PicGo插件安装</h3><p>安装smms-user 1.0.8、autocopy 1.0.5插件，可在《设置》选项中进行一些参数设置。</p>]]></content>
      
      
      <categories>
          
          <category> 建站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> Markdown </tag>
            
            <tag> PicGo </tag>
            
            <tag> SM.MS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Hexo和Github搭建博客</title>
      <link href="/2021/12/26/hello-hexo/"/>
      <url>/2021/12/26/hello-hexo/</url>
      
        <content type="html"><![CDATA[<h2 id="使用Hexo和Github搭建博客"><a href="#使用Hexo和Github搭建博客" class="headerlink" title="使用Hexo和Github搭建博客"></a>使用Hexo和Github搭建博客</h2><blockquote><p>自己作为程序员也工作十几年，居然没有自己的博客[捂脸]，毕竟有时候记录技术和自己的感悟也方便一些。记得以前使用tomcat+jsp搭建blog，全部都要自己写页面，现在发现通过Hexo搭建，还有很多好看的主题，顿时感觉幸福多了。说干就干，中间因为 <code>Github</code> 更换了登录验证方式（现在使用token验证了）耽误了一些时间，最终也差不多二天时间搞定，下面来介绍下具体的步骤：</p></blockquote><h3 id="Step1-注册github账号"><a href="#Step1-注册github账号" class="headerlink" title="Step1 注册github账号"></a>Step1 注册github账号</h3><p>给大家介绍搭建的博客是部署在 <code>Github</code> 上的，所以肯定是要有一个 <code>Github</code> 账号的，没有的小伙伴去注册一个吧。</p><h3 id="Step2-本地环境安装"><a href="#Step2-本地环境安装" class="headerlink" title="Step2 本地环境安装"></a>Step2 本地环境安装</h3><p>本机安装Node、Git、 Hexo，版本信息如下：</p><p>deMacBook-Pro:blog xxx$ hexo -version<br>INFO  Validating config<br>hexo: 5.4.0<br>hexo-cli: 4.3.0<br>os: darwin 20.1.0 11.0.1</p><p>node: 15.13.0<br>v8: 8.6.395.17-node.28<br>uv: 1.41.0<br>zlib: 1.2.11<br>brotli: 1.0.9<br>ares: 1.17.1<br>modules: 88<br>nghttp2: 1.42.0<br>napi: 8<br>llhttp: 2.1.3<br>openssl: 1.1.1j+quic<br>cldr: 38.1<br>icu: 68.2<br>tz: 2020d<br>unicode: 13.0<br>ngtcp2: 0.1.0-DEV<br>nghttp3: 0.1.0-DEV</p><h3 id="Step3-初始化Hexo项目"><a href="#Step3-初始化Hexo项目" class="headerlink" title="Step3 初始化Hexo项目"></a>Step3 初始化Hexo项目</h3><p>hexo init blog</p><p>新建完成后，指定文件夹目录下有：<br>node_modules: 依赖包<br>public：存放生成的页面<br>scaffolds：生成文章的一些模板<br>source：用来存放你的文章<br>themes：主题<br><strong>_config.yml: 博客的配置文件</strong></p><p>在该目录下安装依赖<br>cd blog<br>npm install</p><h3 id="Step4-启动Hexo服务"><a href="#Step4-启动Hexo服务" class="headerlink" title="Step4 启动Hexo服务"></a>Step4 启动Hexo服务</h3><p>Hexo g &amp; Hexo s</p><p>hexo常用命令<br>hexo clean  # 删除编译缓存<br>hexo g == hexo generate #编译<br>hexo s == hexo server #启动服务预览<br>hexo d == hexo deploy #部署到github</p><p><img src="https://s2.loli.net/2022/01/02/dEufHmwotlsybKY.png" alt="image-20220102184322215"></p><h3 id="Step5-github上创建repostiy"><a href="#Step5-github上创建repostiy" class="headerlink" title="Step5 github上创建repostiy"></a>Step5 github上创建repostiy</h3><p>创建项目名为rainerpiao.github.io，用于创建编译好的html</p><p><a href="https://github.com/rainerpiao/rainerpiao.github.io.git">https://github.com/rainerpiao/rainerpiao.github.io.git</a></p><p><img src="https://s2.loli.net/2022/01/02/xZX1ketbiEAyUrK.png" alt="image-20220102184704197"></p><p>进入rainerpiao.github.io项目路径setting/pages: 设置github pages信息</p><p><img src="https://s2.loli.net/2022/01/02/xtUmoNFfr4G8hgV.png" alt="image-20220102184500727"></p><h3 id="Step6-github上创建blog项目"><a href="#Step6-github上创建blog项目" class="headerlink" title="Step6 github上创建blog项目"></a>Step6 github上创建blog项目</h3><p>创建项目名为hexoblog，用于存放源码</p><h3 id="Step7-本机生成SSH并添加到github"><a href="#Step7-本机生成SSH并添加到github" class="headerlink" title="Step7 本机生成SSH并添加到github"></a>Step7 本机生成SSH并添加到github</h3><p>在项目根目录下_config.yml文件中配置blog地址：<br>deploy:<br>  type: git<br>  repo: <a href="https://github.com/rainerpiao/rainerpiao.git">https://github.com/rainerpiao/rainerpiao.git</a><br>  branch: master</p><p>执行hexo d 失败：<br>remote: Support for password authentication was removed on August 13, 2021. Please use a personal access token instead.<br>remote: Please see <a href="https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/">https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/</a> for more information.<br>fatal: ‘<a href="https://github.com/rainerpiao/blog.git/'">https://github.com/rainerpiao/blog.git/'</a> 鉴权失败</p><p>本地git配置<br>git config user.name<br>git config user.email<br>git配置<br>git config –global user.name “rainerpiao”<br>git config –global user.email “<a href="mailto:156572992@qq.com">156572992@qq.com</a>“</p><p>然后创建SSH, 一路回车<br>ssh-keygen -t rsa -C “<a href="mailto:156572992@qq.com">156572992@qq.com</a>“</p><p>生成的key在目录/Users/XXX/.ssh/下生成文件目录：<br>id_rsa、id_rsa.pub、known_hosts<br>ssh，简单来讲，就是一个秘钥，其中，id_rsa是你这台电脑的私人秘钥，不能给别人看的，id_rsa.pub是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。</p><p>登录<a href="https://github.com/settings/keys">https://github.com/settings/keys</a> 添加ssh key<br>复制id_rsa.pub内容到key中，测试是否联通：<br>ssh -T <a href="mailto:git@github.com">git@github.com</a></p><p><img src="https://s2.loli.net/2022/01/02/OXpBvWzDKmlVi9R.png" alt="image-20220102184839262"></p><h3 id="Step8-主题配置"><a href="#Step8-主题配置" class="headerlink" title="Step8 主题配置"></a>Step8 主题配置</h3><p>主题配置hexo-theme-matery, 个人比较喜欢这个主题，另外hueman主题也还不错。</p><p>遇到的问题：发现部署到github后控制台报 lightgallery-all.min.js net:: ERR_ABORTED 404，导致吸顶样式等一些问题，解决方案：到</p><p><a href="https://www.bootcdn.cn/">https://www.bootcdn.cn/</a> 查找对应的cdn资源，将主题下的_config.yml配置修改成</p><p>jquery: <a href="https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.min.js">https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.min.js</a></p><p>lightgallery: <a href="https://cdn.bootcdn.net/ajax/libs/lightgallery/1.10.0/js/lightgallery-all.min.js">https://cdn.bootcdn.net/ajax/libs/lightgallery/1.10.0/js/lightgallery-all.min.js</a></p>]]></content>
      
      
      <categories>
          
          <category> 建站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
